// function iOS() {
//   return [
//     'iPad Simulator',
//     'iPhone Simulator',
//     'iPod Simulator',
//     'iPad',
//     'iPhone',
//     'iPod'
//   ].includes(navigator.platform)
//   // iPad on iOS 13 detection
//   || (navigator.userAgent.includes("Mac") && "ontouchend" in document)
// };
// if(iOS()) {
//   $(".body").addClass("iphone");
// };

// let colosrScheme;
// if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {
// 	colosrScheme = "dark";
// } else {
// 	colosrScheme = "light";
// }
// document.querySelector("body").classList.add("color-" + colosrScheme);

// $(document).ready(function() {

// 	$("[data-fancybox]").fancybox({
//         autoFocus: false,
//         touch: false,
//     });

// 	if(colosrScheme === 'light') {
// 		$(".js-color-mode").addClass("active");
// 	}
// 	$(".js-color-mode").on("click", function(e) {
// 		let colorItem = $(this);
// 		// let colorModeState = colorItem.data("color-scheme");
// 		if(colosrScheme === 'light') {
// 			console.log("light");
// 			colorItem.removeClass("active");
// 			$("body").removeClass("color-light");
// 			$("body").addClass("color-dark");
// 			colosrScheme = "dark";
// 		}else {
// 			console.log("dark");
// 			colorItem.addClass("active");
// 			$("body").removeClass("color-dark");
// 			$("body").addClass("color-light");
// 			colosrScheme = "light";
// 		}
// 	});

// 	let gameTimer = new Swiper('.js-timer-wrap', {
//         slidesPerView: 1,
//         spaceBetween: 30,
//         observer: true,
//         observeParents: true,
//         loop: false,
//         initialSlide: 0,
//         speed: 400,
//         simulateTouch: true,
//         navigation: {
//             nextEl: '.js-timer-next',
//             prevEl: '.js-timer-prev',
//         },
//         on: {
// 		    slideChange: function () {
// 		      $(".js-timer-item").addClass("second");
// 		      $(gameTimer.el).find(".js-timer-item").eq(gameTimer.activeIndex).removeClass("second");
// 		    },
// 		},
//     });

// 	let alarmSound = document.getElementById("alarm");

// 	$(".js-mute").on("click", function() {
// 		$(this).toggleClass("muted");
// 		if($(this).hasClass("muted")) {
// 			alarmSound = null;
// 		}else {
// 			alarmSound = document.getElementById("alarm");
// 		}
// 	});

// 	let timerCount;

// 	let timer;
// 	let timerStatus = false;
// 	$(".js-timer-item").on("click", function(e) {
// 		let timerItem = $(this);
// 		let timeCount = timerItem.data("time");
// 		let i = timeCount;
// 		$(this).find(".timer__item-anim").addClass("active");
// 		setTimeout(function() {
// 			console.log("qwe");
// 			timerItem.find(".timer__item-anim").removeClass("active");
// 		}, 250);
// 		timerItem.addClass("active");
// 		gameTimer.params.noSwiping = true;
// 		gameTimer.params.noSwipingClass = 'swiper-slide';
// 		if(alarmSound != null) {
// 			alarmSound.currentTime = 0;
// 			alarmSound.play();
// 			alarmSound.pause();
// 			alarmSound.currentTime = 0;
// 			setTimeout(function() {
// 				alarmSound.pause();
// 				alarmSound.currentTime = 0;
// 			},0);
// 		};
// 		$(".js-timer-item.second").addClass("disabled");
// 		$(".js-timer-prev, .js-timer-next").addClass("dis");
// 		if(timerStatus == false) {
// 			timerStatus = true;
// 			$(".js-main").addClass("active");
// 			timer = setInterval(function() {
// 				if (i >= 1) {
// 					i--;
// 					timerItem.find(".js-timer-value").text(i);
// 					if(i % 14 === 0) {
// 						alarmSound.currentTime = 0;
// 						alarmSound.play();
// 						setTimeout(function() {
// 							alarmSound.pause();
// 							alarmSound.currentTime = 0;
// 						}, 0);
// 					}
// 				} else {
// 					timerStatus = false;
// 					timerItem.find(".js-timer-value").text(timeCount);
// 					timerItem.removeClass("active");
// 					$(".js-main").removeClass("active");
// 					gameTimer.params.noSwiping = false;
// 					$(".js-timer-item.second").removeClass("disabled");
// 					$(".js-timer-prev, .js-timer-next").removeClass("dis");
// 					if(alarmSound != null) {
// 						alarmSound.currentTime = 0;
// 						alarmSound.play();
// 					}
// 					clearInterval(timer);
// 				}
// 			}, 1000);
// 		}else {
// 			clearInterval(timer);
// 			timerStatus = false;
// 			timerItem.find(".js-timer-value").text(timeCount);
// 			timerItem.removeClass("active");
// 			$(".js-main").removeClass("active");
// 			gameTimer.params.noSwiping = false;
// 			$(".js-timer-item.second").removeClass("disabled");
// 			$(".js-timer-prev, .js-timer-next").removeClass("dis");
// 			i = timeCount;
// 			alarmSound.pause();
// 			alarmSound.currentTime = 0;
// 		}
// 	});
// });

function iOS() {
  return (
    [
      "iPad Simulator",
      "iPhone Simulator",
      "iPod Simulator",
      "iPad",
      "iPhone",
      "iPod",
    ].includes(navigator.platform) ||
    (navigator.userAgent.includes("Mac") && "ontouchend" in document)
  );
}

if (iOS()) {
  $(".body").addClass("iphone");
}

let colosrScheme;

if (
  window.matchMedia &&
  window.matchMedia("(prefers-color-scheme: dark)").matches
) {
  colosrScheme = "dark";
} else {
  colosrScheme = "light";
}

document.querySelector("body").classList.add("color-" + colosrScheme);

$(document).ready(function () {
  $("[data-fancybox]").fancybox({
    autoFocus: false,
    touch: false,
  });

  if (colosrScheme === "light") {
    $(".js-color-mode").addClass("active");
  }

  $(".js-color-mode").on("click", function (e) {
    let colorItem = $(this);
    if (colosrScheme === "light") {
      colorItem.removeClass("active");
      $("body").removeClass("color-light");
      $("body").addClass("color-dark");
      colosrScheme = "dark";
    } else {
      colorItem.addClass("active");
      $("body").removeClass("color-dark");
      $("body").addClass("color-light");
      colosrScheme = "light";
    }
  });

  let gameTimer = new Swiper(".js-timer-wrap", {
    slidesPerView: 1,
    spaceBetween: 30,
    observer: true,
    observeParents: true,
    loop: false,
    initialSlide: 0,
    speed: 400,
    simulateTouch: true,
    navigation: {
      nextEl: ".js-timer-next",
      prevEl: ".js-timer-prev",
    },
    on: {
      slideChange: function () {
        $(".js-timer-item").addClass("second");
        $(gameTimer.el)
          .find(".js-timer-item")
          .eq(gameTimer.activeIndex)
          .removeClass("second");
      },
    },
  });

  let alarmSound = document.getElementById("alarm");

  $(".js-mute").on("click", function () {
    $(this).toggleClass("muted");
    if ($(this).hasClass("muted")) {
      alarmSound = null;
    } else {
      alarmSound = document.getElementById("alarm");
    }
  });

  let timerCount;

  let timer;
  let timerStatus = false;
  $(".js-timer-item").on("click", function (e) {
    let timerItem = $(this);
    let timeCount = timerItem.data("time");
    let i = timeCount;
    timerItem.find(".timer__item-anim").addClass("active");
    setTimeout(function () {
      timerItem.find(".timer__item-anim").removeClass("active");
    }, 250);
    timerItem.addClass("active");
    gameTimer.params.noSwiping = true;
    gameTimer.params.noSwipingClass = "swiper-slide";
    if (alarmSound && alarmSound.paused) {
      alarmSound.currentTime = 0;
      alarmSound.play();
      alarmSound.pause();
      alarmSound.currentTime = 0;
      setTimeout(function () {
        alarmSound.pause();
        alarmSound.currentTime = 0;
      }, 0);
    }
    $(".js-timer-item.second").addClass("disabled");
    $(".js-timer-prev, .js-timer-next").addClass("dis");
    if (timerStatus === false) {
      timerStatus = true;
      $(".js-main").addClass("active");
      timer = setInterval(function () {
        if (i >= 1) {
          i--;
          timerItem.find(".js-timer-value").text(i);
          if (i % 14 === 0) {
            if (alarmSound && alarmSound.paused) {
              alarmSound.currentTime = 0;
              alarmSound.play();
              setTimeout(function () {
                alarmSound.pause();
                alarmSound.currentTime = 0;
              }, 0);
            }
          }
        } else {
          timerStatus = false;
          timerItem.find(".js-timer-value").text(timeCount);
          timerItem.removeClass("active");
          $(".js-main").removeClass("active");
          gameTimer.params.noSwiping = false;
          $(".js-timer-item.second").removeClass("disabled");
          $(".js-timer-prev, .js-timer-next").removeClass("dis");
          if (alarmSound && alarmSound.paused) {
            alarmSound.currentTime = 0;
            alarmSound.play();
          }
          clearInterval(timer);
        }
      }, 1000);
    } else {
      clearInterval(timer);
      timerStatus = false;
      timerItem.find(".js-timer-value").text(timeCount);
      timerItem.removeClass("active");
      $(".js-main").removeClass("active");
      gameTimer.params.noSwiping = false;
      $(".js-timer-item.second").removeClass("disabled");
      $(".js-timer-prev, .js-timer-next").removeClass("dis");
      i = timeCount;
      if (alarmSound && alarmSound.paused) {
        alarmSound.pause();
        alarmSound.currentTime = 0;
      }
    }
  });

  // ... Додатковий код, якщо він існує
});
